apiVersion: v1
kind: Service
metadata:
  name: app-example
  namespace: ${NAMESPACE}
spec:
  ports:
    - port: 3000
      targetPort: 3000
      name: app-example-0
    - port: 3001
      targetPort: 3001
      name: app-example-1
  selector:
    app: app-example
  clusterIP: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-example
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-example
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: app-example
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8082"
    spec:
      # --- Executar projeto no grupo pre definido ---
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: eks.amazonaws.com/nodegroup
                    operator: In
                    values:
                      - app-example
      # --- --- --- --- --- --- --- --- --- --- --- ---
      imagePullSecrets:
        - name: ecr-us-east-1-auth
      containers:
        - image: ${ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/app-example:${VERSION}
          name: app-example
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 50Mi
          readinessProbe:
            httpGet:
              port: 3000
              path: /v1/health
              scheme: HTTP
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
            initialDelaySeconds: 60
          livenessProbe:
            httpGet:
              port: 3000
              path: /v1/health
              scheme: HTTP
            periodSeconds: 15
            timeoutSeconds: 5
            initialDelaySeconds: 60
          env:
            - name: API_PORT
              value: 3000


---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-app-example
  namespace: ${NAMESPACE}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: app-example
  minReplicas: 3
  maxReplicas: 20
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
    - resource:
        name: memory
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
